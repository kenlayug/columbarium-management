<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="columbarium.dao.mybatis.mappers.PackageMapper">
	
	<!-- RESULTMAPS -->
	
		<resultMap type="java.lang.Integer" id="CountPackageResultMap">
			<result property="intCountPackage" column="COUNT(*)"/>
		</resultMap>
		
		<resultMap type="Package" id="PackageResultMap">
			<id property="packageId" column="PackageId"/>
			<result property="strPackageName" column="strPackageName"/>
			<result property="strPackageDesc" column="strPackageDesc"/>
			<result property="dblPrice" column="deciPackagePrice"/>
		</resultMap>
		
		<resultMap id="ItemResultMap" type="Item">
			<id property="itemId" column="itemId"/>
			<result property="strItemName" column="strItemName"/>
			<result property="strItemDesc" column="strItemDesc"/>
			<result property="dblPrice" column="deciItemPrice"/>
		</resultMap>
		
		<resultMap type="Service" id="ServiceResultMap">
			<id property="serviceId" column="serviceId"/>
			<result property="strServiceName" column="strServiceName"/>
			<result property="strServiceDesc" column="strServiceDesc"/>
			<result property="dblPrice" column="deciServicePrice"/>
			<collection property="requirementList" ofType="Requirement">
				<id property="requirementId" column="requirementId"/>
				<result property="strRequirementName" column="strRequirementName"/>
				<result property="strRequirementDesc" column="strRequirementDesc"/>
			</collection>
		</resultMap>
		
		<resultMap type="java.lang.Integer" id="PackageIdResultMap">
			<result property="packageId" column="packageId"/>
		</resultMap>
	
	<!-- END RESULTMAPS -->
	
	<!-- SELECT QUERIES -->
	
		<select id="checkIfExisting" resultMap="CountPackageResultMap">
			SELECT COUNT(*)
			FROM tblPackage
			<where>
				intStatus = 1
				<choose>
					<when test="packageId == 0">
						AND strPackageName LIKE #{strPackageName}
					</when>
					<when test="packageId != 0">
						AND packageId = #{packageId}
					</when>
				</choose>
			</where>
		</select>
		
		<select id="getPackage" resultMap="PackageResultMap">
			SELECT p.*, i.*, s.*
			FROM tblPackage p
			INNER JOIN tblPackageItem pi ON p.packageId = pi.packageIdFK
			INNER JOIN tblItem i ON i.itemId = itemIdFK
			INNER JOIN tblPackageService ps ON p.packageId = ps.packageIdFK
			INNER JOIN tblService s ON s.serviceId = ps.serviceIdFK
			<where>
				p.intStatus = 1
				AND i.intStatus = 1
				AND s.intStatus = 1
				AND pi.intStatus = 1
				AND ps.intStatus = 1
				<choose>
					<when test="packageId != 0">
						AND p.packageId = #{packageId}
					</when>
					<when test="packageId == 0">
						AND p.strPackageName LIKE #{strPackageName}
					</when>
				</choose>
			</where>
			GROUP BY s.serviceId
		</select>
		
		<select id="getPackageId" resultMap="PackageIdResultMap">
			SELECT packageId FROM tblPackage WHERE strPackageName LIKE #{strPackageName}
		</select>
		
		<select id="getAllPackage" resultMap="PackageResultMap">
			SELECT p.packageId, p.strPackageName, p.strPackageDesc, p.deciPackagePrice
			FROM tblPackage p
			WHERE p.intStatus = 1
			ORDER BY strPackageName ASC
		</select>
		
		<select id="getItemsOfPackage" resultMap="ItemResultMap">
			SELECT i.*
			FROM tblPackageItem pi
			LEFT JOIN tblItem i ON pi.itemIdFK = i.itemId
			WHERE pi.packageIdFK = #{packageId}
		</select>
		
		<select id="getServicesOfPackage" resultMap="ServiceResultMap">
			SELECT s.*
			FROM tblPackageService ps
			LEFT JOIN tblService s ON ps.serviceIdFK = s.serviceId
			WHERE ps.packageIdFK = #{packageId}
		</select>
		
		<select id="countAllPackage" resultMap="CountPackageResultMap">
			SELECT COUNT(*) FROM tblPackage
		</select>
		
		<select id="getLastPackageId" resultMap="PackageIdResultMap">
			SELECT packageId FROM tblPackage ORDER BY packageId DESC LIMIT 1
		</select>
		
		<select id="searchPackageList" resultMap="PackageResultMap">
			<bind name="packageName" value="'%' + strPackageName + '%'" />
			SELECT p.packageId, p.strPackageName, p.strPackageDesc, p.deciPackagePrice,
				i.strItemName, i.strItemDesc, i.deciItemPrice,
				s.strServiceName, s.strServiceDesc, s.deciServicePrice
			FROM tblPackage p
			LEFT JOIN tblPackageItem pi ON p.packageId = pi.packageIdFK
			LEFT JOIN tblItem i ON i.itemId = itemIdFK
			LEFT JOIN tblPackageService ps ON p.packageId = ps.packageIdFK
			LEFT JOIN tblService s ON s.serviceId = ps.serviceIdFK
			<where>
				p.intStatus = 1
				AND i.intStatus = 1
				AND s.intStatus = 1
				AND pi.intStatus = 1
				AND ps.intStatus = 1
				<choose>
					<when test="packageId == 0">
						AND strPackageName LIKE #{strPackageName}
					</when>
					<when test="packageId != 0">
						AND packageId = #{packageId}
					</when>
				</choose>
			</where>
			GROUP BY s.serviceId
		</select>
		
		<select id="checkPackageIfExistingService" resultMap="CountPackageResultMap">
			SELECT COUNT(*) FROM tblPackageService
			WHERE packageIdFK = #{packageId}
				AND serviceIdFK = (SELECT serviceId FROM tblService WHERE strServiceName LIKE #{service.strServiceName})
		</select>
		
		<select id="checkPackageIfExistingItem" resultMap="CountPackageResultMap">
			SELECT COUNT(*)
			FROM tblPackageItem
			WHERE packageIdFK = #{packageId}
				AND itemIdFK = (SELECT itemId FROM tblItem WHERE strItemName LIKE #{item.strItemName})
		</select>
	
	<!-- END SELECT QUERIES -->
	
	<!-- INSERT QUERIES -->
	
		<insert id="savePackage">
			INSERT INTO tblPackage(strPackageName, strPackageDesc, deciPackagePrice, intStatus)
			VALUES (#{strPackageName}, #{strPackageDesc}, #{dblPrice}, 1)
		</insert>
		
		<insert id="addServiceToPackage">
			INSERT INTO tblPackageService(packageIdFK, serviceIdFK, intStatus)
			VALUES (
				#{packageId},
				#{service.serviceId},
				1
			)
		</insert>
		
		<insert id="addItemToPackage">
			INSERT INTO tblPackageItem(packageIdFK, itemIdFK, intStatus)
			VALUES (
				#{packageId},
				#{item.itemId},
				1
			)
		</insert>
		
	<!-- END INSERT QUERIES -->
	
	<!-- UPDATE QUERIES -->
	
		<update id="updatePackage">
			UPDATE tblPackage
			<set>
				<if test="strPackageName != null">strPackageName = #{strPackageName},</if>
				<if test="strPackageDesc != null">strPackageDesc = #{strPackageDesc},</if>
				<if test="dblPrice != 0">deciPackagePrice = #{dblPrice}</if>
			</set>
			WHERE packageId = #{packageId}
		</update>
		
		<update id="removeItemFromPackage">
			UPDATE tblPackageItem
			SET intStatus = 0
			WHERE packageIdFK = #{packageId}
				AND itemIdFK = #{item.itemId}
		</update>
		
		<update id="removeServiceFromPackage">
			UPDATE tblPackageService
			SET intStatus = 0
			WHERE packageIdFK = #{packageId}
				AND serviceIdFK = #{service.serviceId}
		</update>
		
		<update id="upItemToPackage">
			UPDATE tblPackageItem
			SET intStatus = 1
			WHERE packageIdFK = #{packageId}
				AND itemIdFK = #{item.itemId}
		</update>
		
		<update id="upServiceToPackage">
			UPDATE tblPackageService
			SET intStatus = 1
			WHERE packageIdFK = #{packageId}
				AND serviceIdFK = #{service.serviceId}
		</update>
		
		<update id="deactivatePackage">
			UPDATE tblPackage
			<set>
				intStatus = 0
			</set>
			WHERE packageId = #{packageId}
		</update>
	
	<!-- END UPDATE QUERIES -->
	
	
	</mapper>